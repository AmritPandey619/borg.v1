Create Bundle REST API parameter description. The create bundle REST API is used to create a bundle.

JSON payload parameter description:
	securityDomain: Optional. Determines the permission setting required for accessing the bundle. A Security Domain (SD) is an ID that contains objects and permissions assigned to each object. Each provisioned object in SM is tagged with a security domain ID. Each SM operator is associated with a set of security domains and within each security domain, the operator is assigned permissions to perform certain actions on specific SM entities. The Security domain is an ID tag for grouping permissions at the operator level and as a reference at the object level. Each role can be assigned multiple security domains
	serviceProvider: Optional. This attribute stores service provider name to which this entity belongs.
    entityVersionDetails: Optional. This parameter stores the bundle's version details.
        majorVersion, minorVersion, patchVersion: Components of the bundle's version. If the bundle version has been supplied, the first digit is the majorVersion value, the second digit is the minorVersion value and the third digit is the patchVersion value.
        baseActiveVersion: The base version on which this version is based. If the major vesrion is 1 or null, the base active version is null explicitly. If the major version is bigger than 1, the baseActiveVersion will get the value 1. 
        startTime: The time when this version became active. If the bundle version has been supply, the startTime is the current time in epoch format. 
        smEntityState: The state of the entity in the system (e.g., DRAFT). We always generate bundles with the default value: DRAFT.
        forceVersioning: Indicates whether versioning is enforced. The default value is null.
    description: Optional. A textual description of the bundle.
	versionNote: Optional. Description of an entity's version, it will belong to a specific version of an entity.
	publishStatus: Optional. The- publish status of the bundle. It can be one of three values - DRAFT, PUBLISHED, UNPUBLISHED. Default is DRAFT.
    updateType: Optional. The type of update being applied to the bundle. Two values possible - PROVISION, DRAFT. The default value is PROVISION.
    name: Mandatory. The name of the bundle.
    icon: Optional. The path to an icon representing the bundle.
    fee: Mandatory. The one time fee associated with the purchase of the bundle. Default is 0. Provides the bundle purchase fee deducted only from the main account balance. Bundle Fee is defined as whole number.
    lifeCycleNames: Optional. An object containing the names of entity and periodic life cycles associated with the bundle.
        entry: Is an array of maximum two objects with each object having two attributes 'key' and 'value'. One object represents the bundle's Entity lifecycle. The other object represents the bundle's periodic lifecycle.
            key: The type of the lifecycle. The type can be either ENTITY for an entity lifecycle or PERIOD for a periodic lifecycle. A periodic lifecycle defines the renewal frequency of the bundle (for example: daily, weekly, monthly or yearly renewal frequency)
            value: The name of the lifecycle of type represented by 'key'
    discountList: Optional. An array of discounts associated with the bundle. A Discount is applicable on bundle subscription fee or renewal fee or both.
    chargingServiceList: Mandatory. An array of charging service ID strings.
    usageControlServiceList: Optional. An array of usage control service ID strings.
    ucServiceList: Optional. An array of usage control service IDs.
    customDataProfileList: Optional. An array of custom data profile IDs.
    maxRenewals: Optional. The maximum number of renewals allowed for the bundle. It is the maximum number of times a subscription can be renewed. If a value is not specified, then it denotes unlimited renewals can take place.
    feePerDevice: Optional. Indicates the fee per device for subscriptions. During subscription renewal, its bundle is checked to determine if a value exists for the fee per device field. If the value exists, then the fee is deducted from the account balance. This fee per device applies to account and subscription renewals only.
    customised: Optional. Indicates whether the bundle is customized. When true it will allow modifications for subscription records attached with subscriber entities like Device or Group. If marked false,then no modification of attached subscriptions is allowed during Subscriber Entities creation/update.
    hourOfDay: Optional. Represents the hour of the day at which the subscriptions of the bundle are reset/renew. If the bundle renews independently, then it renews according to this parameter. Value range is 0 to 25. Values 0 to 23 represent the actual hour of the day. Values 24 and 25 have special meaning - A value of 24 forces the subscription end time to be exactly same as the subscription start time. A value of 25 means that the subscription will end at exactly 00:00:00 irrespective of the start time.
	dayOfWeek: Optional. Represents the day of the week at which the subscriptions of the bundle are reset/renew. Possible values are: "SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "EXACT". The special value "EXACT" forces the subscription end day of the week to be exactly same as the subscription start day of the week.
	dayOfMonth: Optional. Represents the day of the month at which the subscriptions of the bundle are reset/renew. Possible values are: 1 to 32. The values 1 to 31 represent a day of the month. The special value of 32 forces the subscription end day of the month to be exactly same as the subscription start day of the month.
    bundleFeeProrateMode: Optional. This parameter defines how to apply prorating of the fee defined in the bundle or Fee override parameter provided in the create-subscription API. The supported values are as follows:    * None: No prorating fee for the bundle.    * Subscription Start: Bundle fee is prorated based on the exact available day of the current billing cycle. i.e. whenever a subscriber purchases a subscription to the Bundle, the fee for the bundle is prorated.    * Subscription End: Bundle fee is refunded based on the days left in the billing cycle. i.e. whenever a subscriber removes the subscription to the Bundle or the subscription to the bundle expires, then refund the amount back to the subscribers account.    * Both: Bundle fee is prorated when the bundle is subscribed or unsubscribed.
    prorateOnBillingCycle: Optional. This parameter sets the ProrateMode for the BillingCycle. This field indicates whether to execute bundle fee prorating and bucket/counter value prorating when updating balance billing date manually. The supported values are as follows:    * NONE: Prorating is not done.    * PRORATE: Prorating is done as per other controlling parameters in the bundle definition. For example, if the account billing cycle is modified, then other prorating parameters such as bucket prorate mode and counter prorate mode are checked. If the counter prorate mode is none, then NCC prorates the bundle fee and bucket value.   * FORCEPRORATE: Prorating is done without considering the values of controlling parameters in the bundle definition. For example, when the account billing information is modified, NCC does not look for other prorating parameters such as bucket prorate mode, counter prorate mode. By default, NCC prorates the resources as well as the fee that is configured already.
    feeReferenceForProrate: Optional. Sets the ProrateMode for the bundle fee or ChargeFeeAction. If the Bundle fee / Overridden bundle fee parameter has other than None value, then the Fee Reference for Prorate parameter gets enabled. The supported values are as follows( Note that only one option can be chosen):   * BUNDLE_FEE_OR_FEE_OVERRIDE: Bundle fee / Overridden fee. Select this option if fee defined in bundle or Fee Override parameter must be considered as bundle initial charge/activation fee. That is, it specifies whether the prorating must be done on bundle fee or overridden fee. Overridden fee has higher priority than bundle fee. If an overridden fee is specified in a bundle, then that is prorated. Otherwise, bundle fee is prorated.    * CHARGE_FEE_ACTION: Charge fee action - Select this option if initial charge/activation fee for bundle is configured to be deducted using the Charge Fee Action defined only in Initial state of periodic lifecycle of subscription. That is, the bundle fee specified is charged as is. The charge fee action given in the subscription initial state is prorated.
    bucketProrateMode: Optional. Sets the ProrateMode for the bucket. This field indicates how to apply prorating for the buckets of the bundle. The supported values are as follows:   * NONE: Bucket value is not prorated. That is, the initial value given in the bundle is not prorated and the entire amount is given.    * SUBSCRIPTION: Bucket value is prorated based on the exact available day of the current billing cycle.
    counterProrateMode: Optional. Sets the ProrateMode for the counter. This field indicates how to apply prorating for the counter of the bundle. The supported values are as follows: * NONE: Counter value is not prorated.  * SUBSCRIPTION: Counter value is prorated after checking the counter prorating cap value according to the exact available day of current billing cycle of counter cap value.
    taxId: Optional. Provides the Taxation Id to be used during rating and charging. Valid values must satisfy the regex pattern pattern: ^[a-zA-Z0-9_.!?-]*$
	taxIncluded: Optional. Specifies if tax amount is included or not in the bundle fee. By default, it is considered false i.e. Tax is applied over the fee. The value true means tax amount is included in the fee.
    chargeMissedPeriod: Optional. Specifies if missed recurrent periods due to renewal failure should be charged during Subscription Renewal on Account Recharge. The value true means missed periods should be charged on Account recharge.
    bundleActivationType: Optional. Bundle Type refers to which type of bundle is in use. Possible values are:  * NORMAL: normal bundle.    * ON_SESSION: bundle on use.    * AUTO_INSTALL: Bundle is activated as soon as it is subscribed.    * SUBSCRIPTION_MERGE: is used to define that the bundle is a rolling bundle. For example if subscriber purchases same type of subscription(bundle) again before the expiry of existing subscription(bundle), then both subscriptions will be merged and subscriber should get combined balance at bucket level in new subscription where existing subscription will be move to final state. Note that BundleActivationType cannot be change in update. Please refer Rollover Bundle feature documentation for more detail and validations.
    ruleTables: Optional. An array of rule tables associated with the bundle.
        ruleSetNames: An array of rule set names. As default leave the array empty.
        name: The name of the rule table. Default null value.
        rules: An array of rules within the table. As default leave the array empty.
        topLevelTable: Indicates whether this is a top-level table. As default the value is true.
    prorateGranularity: Optional. Sets the ProrateGranularity for the bundle. This field indicates how to apply prorating granularity for the bundle.The supported values are as follows:   * DEFAULT: Prorating as per existing functionality. * HOURS: Prorating based on hours granularity.  * DAYS: Prorating based on days granularity.
    alignBundleRef: Optional. The name of a reference Bundle to which this bundle's expiration is aligned to.
    disableTTC: Optional. A boolean flag to indicate if TTC calculation should occur or not. If this flag is set to true, only then TTC calculation will not be done and VT will be aligned to subscription's expiration date and time.
    randomizeVT: Optional. A boolean flag to indicate if VT(Validity Time) randomization should occur or not. This flag would only come in consideration if disableTTC parameter is set to true.
    alignWithInputDate: Optional. A boolean flag to indicate if end time calculation should align to Input Date. If this flag is set to true, the calculation should align to Input Date. If this flag is set to false, follow existing behavior.
	prorationProfileId: Optional. The ID of the Proration Profile.
    queueId: Optional. QueueId will help us in identifying the Bundle Queue. If BundleActivationType is subscription merge then same QueueId(MergeId) is used to identify the Rollover Bundle. Note that QueueId(MergeId) is mandatory in create and cannot be modified in update if BundleActivationType is subscription merge. Please refer Rollover Bundle feature documentation for more detail and validations.
    maxBundleInstances: Optional. The number of active subscriptions to the bundle that a subscriber or a subscriber group is allowed to have. A value of 0 or null means there is no limit. Negative values are not allowed.
    nccrecord: Optional. Indicates whether the bundle is recorded in NCC (Nokia Charging Controller). As default the value is true.
    versionSettings: Optional. Provides the ability to create a version protected bundle. Note: Once the Bundle is created, version protection cannot be updated and will be same for all subsequent versions.
    validityTime: Optional. The number of billing cycles (including the current cycle) that the attributes overridden by template APIs will retain their values. Only non-negative values are allowed. For permanent 0 should be passed.
    buckets: Optional. An array of buckets associated with the bundle.
    counters: Optional. An array of counters associated with the bundle.
    renewalPriority: Optional. Used to define whether a subscription is mandatory subscription or optional subscription. It also indicates the renewal order of the optional subscriptions when the subscriptions are being renewed by Account. The renewalPriority 0 indicates subscription is mandatory subscription. A positive non zero value indicates subscription is optional subscription with 1 being the highest priority
    customData: Optional. An object representing a list of custom attributes of the Bundle.
    aggregateViewIdList: Optional. An array of aggregate view IDs.
    processingType: Optional. This ProcessingType Enum indicate bundle can be auto-managed and None. Values can be NONE and AUTO_MANAGE.
	deleteDraftVersionsOnPublish: Optional. A boolean flag to indicate if Draft Versions will be cleaned up when the bundle is published to the Managed Element(ME) or not. If this flag is set to true, the Draft Versions will be deleted. If this flag is set to false, the Draft Versions will not be deleted.
	campaignStartDate: Optional. This is the Campaign Bundle Start Date.
	campaignEndDate: Optional. This is the Campaign Bundle End Date.
	subscriptionEndDate: Optional. This is the Subscription End Date.
	renewalEndDate: Optional. This is the Renewal End Date for the Renewable Bundles.
    ucserviceObjList: Optional. An array of usage control service objects.
    versionedId: Optional. The versioned ID of the bundle.
    